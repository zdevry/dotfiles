#!/usr/bin/bash
set -euo pipefail

[[ -z "${ROFI_PRIM_BT_TIMEOUT+x}" ]] && ROFI_PRIM_BT_TIMEOUT=8

is_power_on() {
	bluetoothctl show | grep -Fq "Powered: no" && return 1
	return 0
}

is_connected() {
	bluetoothctl info "$1" | grep -Fq "Connected: yes"
}

notify() {
	notify-send "$1" -a "bluetooth"
}

bt_connect() {
	DEVNAME="$(cut -d" " -f3- <<< "$1")"
	notify-send "Connecting to $DEVNAME (timeout: $ROFI_PRIM_BT_TIMEOUT seconds)"
	
	MAC="$(cut -d' ' -f2 <<< "$1")"
	bluetoothctl -t "$ROFI_PRIM_BT_TIMEOUT" connect "$MAC"

	if is_connected "$MAC"; then
		notify "Successfully connected to $DEVNAME"
	else
		notify "Failed to connect to $DEVNAME"
	fi
}

bt_disconnect() {
	DEVNAME="$(cut -d" " -f3- <<< "$1")"
	notify "Disconnecting $DEVNAME (timeout: $ROFI_PRIM_BT_TIMEOUT seconds)"
	
	MAC="$(cut -d' ' -f2 <<< "$1")"
	bluetoothctl -t "$ROFI_PRIM_BT_TIMEOUT" disconnect "$MAC"
}

use_bluetoothctl() {
	alacritty msg create-window -e "bluetoothctl" || alacritty -e "bluetoothctl" &
	exit 0
}

power_off_opts() {
	echo "󰐥 Bluetooth On"
	echo " bluetoothctl"
	echo "󰈆 Exit"
}

power_off_menu() {
	if ! SELECTION="$(power_off_opts | rofi -dmenu -p 󰂯)"; then
		exit 0;
	fi
	case $SELECTION in
		󰐥*) bluetoothctl power on;;
		*) use_bluetoothctl;;
		󰈆*) exit 0;;
	esac
}

power_on_opts() {
	bluetoothctl devices Connected | sed "s/Device/󰂲/"
	bluetoothctl devices Paired | sed "s/Device/󰂯/"
	echo "󰐥 Bluetooth Off"
	echo " bluetoothctl"
	echo "󰈆 Exit"
}

power_on_menu() {
	if ! SELECTION="$(power_on_opts | rofi -dmenu -p 󰂯)"; then
		exit 0;
	fi
	case $SELECTION in
		󰂲*) bt_disconnect "$SELECTION";;
		󰐥*) bluetoothctl power off;;
		󰂯*) bt_connect "$SELECTION";;
		*) use_bluetoothctl;;
		󰈆*) exit 0;;
	esac
}

while true; do
	is_power_on && power_on_menu || power_off_menu
done
